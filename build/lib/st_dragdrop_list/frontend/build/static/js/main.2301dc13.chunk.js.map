{"version":3,"sources":["ST_DragDropList.tsx","index.tsx"],"names":["defaultRenderItem","props","item","_props$width","_jsx","Paper","sx","width","backgroundColor","theme","padding","border","textColor","children","Typography","color","fontFamily","font","name","ContainerComponent","Container","onDrop","e","_props$initSort","setItems","arr","dropResult","initSort","removedIndex","addedIndex","payload","result","_toConsumableArray","itemToAdd","splice","sort","a","b","order","map","idx","_objectSpread","applyDrag","items","innerThemeProps","Draggable","renderItem","id","ST_DragDropList","_React$useState","React","useState","_React$useState2","_slicedToArray","useEffect","Streamlit","setComponentValue","ST_DragDropListComponent","renderData","useRenderData","args","ReactDOM","render","StrictMode","StreamlitProvider","document","getElementById"],"mappings":"gPAaA,SAASA,EAAkBC,EAAwBC,GAAiC,IAADC,EAC/E,OACIC,cAACC,IAAK,CACFC,GAAI,CACAC,MAAkB,QAAbJ,EAAEF,EAAMM,aAAK,IAAAJ,IAAI,OACtBK,gBAAiBP,EAAMQ,MAAMD,gBAC7BE,QAAS,EACTC,OAAQ,aAAeV,EAAMQ,MAAMG,WACrCC,SAEFT,cAACU,IAAU,CACPC,MAAOd,EAAMQ,MAAMG,UACnBI,WAAYf,EAAMQ,MAAMQ,KAAKJ,SAE5BX,EAAKgB,QAItB,CAEA,IAsCMC,EAAsC,SAAClB,GAAY,OAErDG,cAACgB,YAAS,CACNC,OAAQ,SAACC,GAAa,IAAAC,EAAA,OAAKtB,EAAMuB,SAzCvB,SAACC,EAAaC,EAAwBC,GACpD,IAAQC,EAAsCF,EAAtCE,aAAcC,EAAwBH,EAAxBG,WAAYC,EAAYJ,EAAZI,QAClC,GAAqB,OAAjBF,GAAwC,OAAfC,EAAqB,OAAOJ,EAEzD,IAAMM,EAAMC,YAAOP,GACfQ,EAAYH,EAUhB,OARqB,OAAjBF,IACAK,EAAYF,EAAOG,OAAON,EAAc,GAAG,IAG5B,OAAfC,GACAE,EAAOG,OAAOL,EAAY,EAAGI,GAG7BN,EACOI,EAAOI,MAAK,SAACC,EAASC,GAAO,OAAKD,EAAEE,MAAQD,EAAEC,KAAK,IAEnDP,EAAOQ,KAAI,SAACrC,EAAYsC,GAC3B,OAAAC,wBAAA,GAAYvC,GAAI,IAAEoC,MAAOE,GAC7B,GAER,CAmBkDE,CAAUzC,EAAM0C,MAAOrB,EAAiB,QAAhBC,EAAEtB,EAAM0B,gBAAQ,IAAAJ,MAAW,EAACV,SAG1FZ,EAAM0C,MAAMJ,KAAI,SAACrC,GACb,IAAM0C,EAAmC,CAAE,MAAS3C,EAAMQ,MAAO,MAASR,EAAMM,OAChF,OACIH,cAACyC,YAAS,CAAAhC,SACLZ,EAAM6C,WAAa7C,EAAM6C,WAAWF,EAAiB1C,GAAQF,EAAkB4C,EAAiB1C,IADrFA,EAAK6C,GAI7B,KAEK,EAYFC,EAR0C,SAAA/C,GACrD,IAAAgD,EAA0BC,IAAMC,SAASlD,EAAM0C,OAAMS,EAAAC,YAAAJ,EAAA,GAA9CN,EAAKS,EAAA,GAAE5B,EAAQ4B,EAAA,GAItB,OAHAF,IAAMI,WAAU,WACZC,YAAUC,kBAAkBb,EAChC,GAAG,CAACA,IACGvC,cAACe,EAAkBsB,YAAA,GAAAA,wBAAA,GAAUxC,GAAK,IAAE0C,QAAOnB,cACtD,EC1FMiC,EAAsC,WAC1C,IAAMC,EAAyBC,0BAC/B,OACEvD,cAAC4C,EAAeP,YAAA,GAAAA,wBAAA,GAAUiB,EAAWE,MAAI,IAAE,MAASF,EAAWjD,SAEnE,EAEAoD,IAASC,OACP1D,cAAC8C,IAAMa,WAAU,CAAAlD,SACfT,cAAC4D,oBAAiB,CAAAnD,SAChBT,cAACqD,EAAwB,QAG7BQ,SAASC,eAAe,Q","file":"static/js/main.2301dc13.chunk.js","sourcesContent":["// (1) import Layer\nimport React from 'react';\nimport { Streamlit, Theme } from 'streamlit-component-lib';\nimport { Container, Draggable, DropResult } from 'react-smooth-dnd';\nimport { Paper, Typography } from '@mui/material';\n\n// (2) Types Layer\nexport interface Item {\n    id: string\n    name: string\n    order: number\n}\n\nfunction defaultRenderItem(props: InnerThemeProps, item: Item): React.ReactElement {\n    return (\n        <Paper\n            sx={{\n                width: props.width ?? '100%',\n                backgroundColor: props.theme.backgroundColor,\n                padding: 1,\n                border: \"1px solid \" + props.theme.textColor,\n            }}\n        >\n            <Typography\n                color={props.theme.textColor}\n                fontFamily={props.theme.font}\n            >\n                {item.name}\n            </Typography>\n        </Paper>\n    )\n}\n\nconst applyDrag = (arr: Item[], dropResult: DropResult, initSort: boolean) => {\n    const { removedIndex, addedIndex, payload } = dropResult;\n    if (removedIndex === null && addedIndex === null) return arr;\n\n    const result = [...arr];\n    let itemToAdd = payload;\n\n    if (removedIndex !== null) {\n        itemToAdd = result.splice(removedIndex, 1)[0];\n    }\n\n    if (addedIndex !== null) {\n        result.splice(addedIndex, 0, itemToAdd);\n    }\n\n    if (initSort) {\n        return result.sort((a: Item, b: Item) => a.order - b.order)\n    } else {\n        return result.map((item: Item, idx: number) => {\n            return { ...item, order: idx };\n        });\n    }\n};\n\nexport type ContainerProps = {\n    items: Item[]\n    renderItem?: (theme: InnerThemeProps, item: Item) => React.ReactElement\n    initSort?: boolean\n} & InnerThemeProps\ntype InnerThemeProps = {\n    width?: string\n    theme: Theme\n}\ntype Props = {\n    setItems: React.Dispatch<React.SetStateAction<Item[]>>\n} & ContainerProps\n\n// (3) DOM Layer\nconst ContainerComponent: React.FC<Props> = (props: Props) => (\n\n    <Container\n        onDrop={(e: DropResult) => props.setItems(applyDrag(props.items, e, props.initSort ?? false))}\n    >\n        {\n            props.items.map((item: Item) => {\n                const innerThemeProps: InnerThemeProps = { \"theme\": props.theme, \"width\": props.width }\n                return (\n                    <Draggable key={item.id}>\n                        {props.renderItem ? props.renderItem(innerThemeProps, item) : defaultRenderItem(innerThemeProps, item)}\n                    </Draggable>\n                );\n            })\n        }\n    </Container >\n)\n\n// (4) Container Layer\nexport const ST_DragDropList: React.FC<ContainerProps> = props => {\n    const [items, setItems] = React.useState(props.items);\n    React.useEffect(() => {\n        Streamlit.setComponentValue(items)\n    }, [items])\n    return <ContainerComponent {...{ ...props, items, setItems }} />\n}\n\nexport default ST_DragDropList;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { RenderData } from \"streamlit-component-lib\";\nimport { useRenderData, StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport ST_DragDropList from \"./ST_DragDropList\"\n\nconst ST_DragDropListComponent: React.VFC = () => {\n  const renderData: RenderData = useRenderData();\n  return (\n    <ST_DragDropList {...{ ...renderData.args, \"theme\": renderData.theme }} />\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <ST_DragDropListComponent />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}