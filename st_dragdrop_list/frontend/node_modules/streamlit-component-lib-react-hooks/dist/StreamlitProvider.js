"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRenderData = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importStar(require("react"));
var streamlit_component_lib_1 = require("streamlit-component-lib");
var useNullableRenderData_1 = require("./useNullableRenderData");
var ErrorBoundary_1 = __importDefault(require("./ErrorBoundary"));
var renderDataContext = react_1.default.createContext(undefined);
/**
 * Returns `RenderData` received from Streamlit.
 */
var useRenderData = function () {
    var contextValue = (0, react_1.useContext)(renderDataContext);
    if (contextValue == null) {
        throw new Error("useRenderData() must be used inside <StreamlitProvider />");
    }
    return contextValue;
};
exports.useRenderData = useRenderData;
var StreamlitProvider = function (props) {
    var renderData = (0, useNullableRenderData_1.useNullableRenderData)();
    (0, react_1.useEffect)(function () {
        streamlit_component_lib_1.Streamlit.setFrameHeight();
    });
    // Don't render until we've gotten our first data from Streamlit.
    if (renderData == null) {
        return null;
    }
    return ((0, jsx_runtime_1.jsx)(ErrorBoundary_1.default, { children: (0, jsx_runtime_1.jsx)(renderDataContext.Provider, __assign({ value: renderData }, { children: props.children }), void 0) }, void 0));
};
exports.default = StreamlitProvider;
